name: Aleph CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: services/*/package-lock.json
    
    - name: Install dependencies
      run: |
        for service in services/*/; do
          if [ -f "$service/package.json" ]; then
            cd "$service" && npm ci && cd ../..
          fi
        done
    
    - name: Run tests
      run: |
        for service in services/*/; do
          if [ -f "$service/package.json" ]; then
            cd "$service" && npm test && cd ../..
          fi
        done

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker images
      run: |
        for service in services/*/; do
          if [ -f "$service/Dockerfile" ]; then
            service_name=$(basename "$service")
            docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$service_name:latest "$service"
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/$service_name:latest
          fi
        done

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Kubernetes
      run: |
        echo "ðŸš€ Deployment step - configure your K8s cluster connection"
        # kubectl apply -f infrastructure/kubernetes/
